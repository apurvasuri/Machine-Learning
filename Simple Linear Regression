#importing libraries
import numpy as np
import pandas as ps
import matplotlib.pyplot as plt

#importing dataset
data = ps.read_csv('Salary_Data.csv')
x = data.iloc[:,:-1].values
y = data.iloc[:,1].values

#splitting into training and testing set
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 1/3, random_state = 0)

#Making our Regressor
from sklearn.linear_model import LinearRegression
reg = LinearRegression()
reg.fit(x_train,y_train)

#Predicting our model
y_pred = reg.predict(x_test)

#Plotting training set and linear regression graph
plt.scatter(x_train,y_train,color = 'red')
plt.plot(x_train,reg.predict(x_train),color = 'blue')
plt.title('Salary Vs Experience Training Set')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

#Plotting testing set and our Linear Regression model
plt.scatter(x_test,y_test,color = 'red')
plt.plot(x_train,reg.predict(x_train),color = 'blue')   
#wether we use X_test or X_train it wont make a difference as we have obtained a unique equation for our model that wont change
plt.title('Salary Vs Experience Training Set')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

#Plotting testing set and our Linear Regression model
plt.scatter(x_test,y_test,color = 'red')
plt.plot(x_test,reg.predict(x_test),color = 'blue')   
#wether we use X_test or X_train it wont make a difference as we have obtained a unique equation for our model that wont change
plt.title('Salary Vs Experience Training Set')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()
